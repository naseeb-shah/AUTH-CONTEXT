{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.find = find;\nexports.findParent = findParent;\nexports.getAncestry = getAncestry;\nexports.getDeepestCommonAncestorFrom = getDeepestCommonAncestorFrom;\nexports.getEarliestCommonAncestorFrom = getEarliestCommonAncestorFrom;\nexports.getFunctionParent = getFunctionParent;\nexports.getStatementParent = getStatementParent;\nexports.inType = inType;\nexports.isAncestor = isAncestor;\nexports.isDescendant = isDescendant;\n\nvar _t = require(\"@babel/types\");\n\nvar _index = require(\"./index\");\n\nconst {\n  VISITOR_KEYS\n} = _t;\n\nfunction findParent(callback) {\n  let path = this;\n\n  while (path = path.parentPath) {\n    if (callback(path)) return path;\n  }\n\n  return null;\n}\n\nfunction find(callback) {\n  let path = this;\n\n  do {\n    if (callback(path)) return path;\n  } while (path = path.parentPath);\n\n  return null;\n}\n\nfunction getFunctionParent() {\n  return this.findParent(p => p.isFunction());\n}\n\nfunction getStatementParent() {\n  let path = this;\n\n  do {\n    if (!path.parentPath || Array.isArray(path.container) && path.isStatement()) {\n      break;\n    } else {\n      path = path.parentPath;\n    }\n  } while (path);\n\n  if (path && (path.isProgram() || path.isFile())) {\n    throw new Error(\"File/Program node, we can't possibly find a statement parent to this\");\n  }\n\n  return path;\n}\n\nfunction getEarliestCommonAncestorFrom(paths) {\n  return this.getDeepestCommonAncestorFrom(paths, function (deepest, i, ancestries) {\n    let earliest;\n    const keys = VISITOR_KEYS[deepest.type];\n\n    for (const ancestry of ancestries) {\n      const path = ancestry[i + 1];\n\n      if (!earliest) {\n        earliest = path;\n        continue;\n      }\n\n      if (path.listKey && earliest.listKey === path.listKey) {\n        if (path.key < earliest.key) {\n          earliest = path;\n          continue;\n        }\n      }\n\n      const earliestKeyIndex = keys.indexOf(earliest.parentKey);\n      const currentKeyIndex = keys.indexOf(path.parentKey);\n\n      if (earliestKeyIndex > currentKeyIndex) {\n        earliest = path;\n      }\n    }\n\n    return earliest;\n  });\n}\n\nfunction getDeepestCommonAncestorFrom(paths, filter) {\n  if (!paths.length) {\n    return this;\n  }\n\n  if (paths.length === 1) {\n    return paths[0];\n  }\n\n  let minDepth = Infinity;\n  let lastCommonIndex, lastCommon;\n  const ancestries = paths.map(path => {\n    const ancestry = [];\n\n    do {\n      ancestry.unshift(path);\n    } while ((path = path.parentPath) && path !== this);\n\n    if (ancestry.length < minDepth) {\n      minDepth = ancestry.length;\n    }\n\n    return ancestry;\n  });\n  const first = ancestries[0];\n\n  depthLoop: for (let i = 0; i < minDepth; i++) {\n    const shouldMatch = first[i];\n\n    for (const ancestry of ancestries) {\n      if (ancestry[i] !== shouldMatch) {\n        break depthLoop;\n      }\n    }\n\n    lastCommonIndex = i;\n    lastCommon = shouldMatch;\n  }\n\n  if (lastCommon) {\n    if (filter) {\n      return filter(lastCommon, lastCommonIndex, ancestries);\n    } else {\n      return lastCommon;\n    }\n  } else {\n    throw new Error(\"Couldn't find intersection\");\n  }\n}\n\nfunction getAncestry() {\n  let path = this;\n  const paths = [];\n\n  do {\n    paths.push(path);\n  } while (path = path.parentPath);\n\n  return paths;\n}\n\nfunction isAncestor(maybeDescendant) {\n  return maybeDescendant.isDescendant(this);\n}\n\nfunction isDescendant(maybeAncestor) {\n  return !!this.findParent(parent => parent === maybeAncestor);\n}\n\nfunction inType() {\n  let path = this;\n\n  for (var _len = arguments.length, candidateTypes = new Array(_len), _key = 0; _key < _len; _key++) {\n    candidateTypes[_key] = arguments[_key];\n  }\n\n  while (path) {\n    for (const type of candidateTypes) {\n      if (path.node.type === type) return true;\n    }\n\n    path = path.parentPath;\n  }\n\n  return false;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","find","findParent","getAncestry","getDeepestCommonAncestorFrom","getEarliestCommonAncestorFrom","getFunctionParent","getStatementParent","inType","isAncestor","isDescendant","_t","require","_index","VISITOR_KEYS","callback","path","parentPath","p","isFunction","Array","isArray","container","isStatement","isProgram","isFile","Error","paths","deepest","i","ancestries","earliest","keys","type","ancestry","listKey","key","earliestKeyIndex","indexOf","parentKey","currentKeyIndex","filter","length","minDepth","Infinity","lastCommonIndex","lastCommon","map","unshift","first","depthLoop","shouldMatch","push","maybeDescendant","maybeAncestor","parent","candidateTypes","node"],"sources":["C:/Users/arrow/Desktop/Software Topics/React.js/ui/node_modules/@babel/traverse/lib/path/ancestry.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.find = find;\nexports.findParent = findParent;\nexports.getAncestry = getAncestry;\nexports.getDeepestCommonAncestorFrom = getDeepestCommonAncestorFrom;\nexports.getEarliestCommonAncestorFrom = getEarliestCommonAncestorFrom;\nexports.getFunctionParent = getFunctionParent;\nexports.getStatementParent = getStatementParent;\nexports.inType = inType;\nexports.isAncestor = isAncestor;\nexports.isDescendant = isDescendant;\n\nvar _t = require(\"@babel/types\");\n\nvar _index = require(\"./index\");\n\nconst {\n  VISITOR_KEYS\n} = _t;\n\nfunction findParent(callback) {\n  let path = this;\n\n  while (path = path.parentPath) {\n    if (callback(path)) return path;\n  }\n\n  return null;\n}\n\nfunction find(callback) {\n  let path = this;\n\n  do {\n    if (callback(path)) return path;\n  } while (path = path.parentPath);\n\n  return null;\n}\n\nfunction getFunctionParent() {\n  return this.findParent(p => p.isFunction());\n}\n\nfunction getStatementParent() {\n  let path = this;\n\n  do {\n    if (!path.parentPath || Array.isArray(path.container) && path.isStatement()) {\n      break;\n    } else {\n      path = path.parentPath;\n    }\n  } while (path);\n\n  if (path && (path.isProgram() || path.isFile())) {\n    throw new Error(\"File/Program node, we can't possibly find a statement parent to this\");\n  }\n\n  return path;\n}\n\nfunction getEarliestCommonAncestorFrom(paths) {\n  return this.getDeepestCommonAncestorFrom(paths, function (deepest, i, ancestries) {\n    let earliest;\n    const keys = VISITOR_KEYS[deepest.type];\n\n    for (const ancestry of ancestries) {\n      const path = ancestry[i + 1];\n\n      if (!earliest) {\n        earliest = path;\n        continue;\n      }\n\n      if (path.listKey && earliest.listKey === path.listKey) {\n        if (path.key < earliest.key) {\n          earliest = path;\n          continue;\n        }\n      }\n\n      const earliestKeyIndex = keys.indexOf(earliest.parentKey);\n      const currentKeyIndex = keys.indexOf(path.parentKey);\n\n      if (earliestKeyIndex > currentKeyIndex) {\n        earliest = path;\n      }\n    }\n\n    return earliest;\n  });\n}\n\nfunction getDeepestCommonAncestorFrom(paths, filter) {\n  if (!paths.length) {\n    return this;\n  }\n\n  if (paths.length === 1) {\n    return paths[0];\n  }\n\n  let minDepth = Infinity;\n  let lastCommonIndex, lastCommon;\n  const ancestries = paths.map(path => {\n    const ancestry = [];\n\n    do {\n      ancestry.unshift(path);\n    } while ((path = path.parentPath) && path !== this);\n\n    if (ancestry.length < minDepth) {\n      minDepth = ancestry.length;\n    }\n\n    return ancestry;\n  });\n  const first = ancestries[0];\n\n  depthLoop: for (let i = 0; i < minDepth; i++) {\n    const shouldMatch = first[i];\n\n    for (const ancestry of ancestries) {\n      if (ancestry[i] !== shouldMatch) {\n        break depthLoop;\n      }\n    }\n\n    lastCommonIndex = i;\n    lastCommon = shouldMatch;\n  }\n\n  if (lastCommon) {\n    if (filter) {\n      return filter(lastCommon, lastCommonIndex, ancestries);\n    } else {\n      return lastCommon;\n    }\n  } else {\n    throw new Error(\"Couldn't find intersection\");\n  }\n}\n\nfunction getAncestry() {\n  let path = this;\n  const paths = [];\n\n  do {\n    paths.push(path);\n  } while (path = path.parentPath);\n\n  return paths;\n}\n\nfunction isAncestor(maybeDescendant) {\n  return maybeDescendant.isDescendant(this);\n}\n\nfunction isDescendant(maybeAncestor) {\n  return !!this.findParent(parent => parent === maybeAncestor);\n}\n\nfunction inType(...candidateTypes) {\n  let path = this;\n\n  while (path) {\n    for (const type of candidateTypes) {\n      if (path.node.type === type) return true;\n    }\n\n    path = path.parentPath;\n  }\n\n  return false;\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}