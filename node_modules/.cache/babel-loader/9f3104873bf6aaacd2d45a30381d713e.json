{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parser;\n\nfunction _parser() {\n  const data = require(\"@babel/parser\");\n\n  _parser = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _codeFrame() {\n  const data = require(\"@babel/code-frame\");\n\n  _codeFrame = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _missingPluginHelper = require(\"./util/missing-plugin-helper\");\n\nfunction* parser(pluginPasses, _ref, code) {\n  let {\n    parserOpts,\n    highlightCode = true,\n    filename = \"unknown\"\n  } = _ref;\n\n  try {\n    const results = [];\n\n    for (const plugins of pluginPasses) {\n      for (const plugin of plugins) {\n        const {\n          parserOverride\n        } = plugin;\n\n        if (parserOverride) {\n          const ast = parserOverride(code, parserOpts, _parser().parse);\n          if (ast !== undefined) results.push(ast);\n        }\n      }\n    }\n\n    if (results.length === 0) {\n      return (0, _parser().parse)(code, parserOpts);\n    } else if (results.length === 1) {\n      yield* [];\n\n      if (typeof results[0].then === \"function\") {\n        throw new Error(`You appear to be using an async parser plugin, ` + `which your current version of Babel does not support. ` + `If you're using a published plugin, you may need to upgrade ` + `your @babel/core version.`);\n      }\n\n      return results[0];\n    }\n\n    throw new Error(\"More than one plugin attempted to override parsing.\");\n  } catch (err) {\n    if (err.code === \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\") {\n      err.message += \"\\nConsider renaming the file to '.mjs', or setting sourceType:module \" + \"or sourceType:unambiguous in your Babel config for this file.\";\n    }\n\n    const {\n      loc,\n      missingPlugin\n    } = err;\n\n    if (loc) {\n      const codeFrame = (0, _codeFrame().codeFrameColumns)(code, {\n        start: {\n          line: loc.line,\n          column: loc.column + 1\n        }\n      }, {\n        highlightCode\n      });\n\n      if (missingPlugin) {\n        err.message = `${filename}: ` + (0, _missingPluginHelper.default)(missingPlugin[0], loc, codeFrame);\n      } else {\n        err.message = `${filename}: ${err.message}\\n\\n` + codeFrame;\n      }\n\n      err.code = \"BABEL_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","parser","_parser","data","require","_codeFrame","_missingPluginHelper","pluginPasses","code","parserOpts","highlightCode","filename","results","plugins","plugin","parserOverride","ast","parse","undefined","push","length","then","Error","err","message","loc","missingPlugin","codeFrame","codeFrameColumns","start","line","column"],"sources":["C:/Users/arrow/Desktop/Software Topics/React.js/ui/node_modules/@babel/core/lib/parser/index.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parser;\n\nfunction _parser() {\n  const data = require(\"@babel/parser\");\n\n  _parser = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _codeFrame() {\n  const data = require(\"@babel/code-frame\");\n\n  _codeFrame = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _missingPluginHelper = require(\"./util/missing-plugin-helper\");\n\nfunction* parser(pluginPasses, {\n  parserOpts,\n  highlightCode = true,\n  filename = \"unknown\"\n}, code) {\n  try {\n    const results = [];\n\n    for (const plugins of pluginPasses) {\n      for (const plugin of plugins) {\n        const {\n          parserOverride\n        } = plugin;\n\n        if (parserOverride) {\n          const ast = parserOverride(code, parserOpts, _parser().parse);\n          if (ast !== undefined) results.push(ast);\n        }\n      }\n    }\n\n    if (results.length === 0) {\n      return (0, _parser().parse)(code, parserOpts);\n    } else if (results.length === 1) {\n      yield* [];\n\n      if (typeof results[0].then === \"function\") {\n        throw new Error(`You appear to be using an async parser plugin, ` + `which your current version of Babel does not support. ` + `If you're using a published plugin, you may need to upgrade ` + `your @babel/core version.`);\n      }\n\n      return results[0];\n    }\n\n    throw new Error(\"More than one plugin attempted to override parsing.\");\n  } catch (err) {\n    if (err.code === \"BABEL_PARSER_SOURCETYPE_MODULE_REQUIRED\") {\n      err.message += \"\\nConsider renaming the file to '.mjs', or setting sourceType:module \" + \"or sourceType:unambiguous in your Babel config for this file.\";\n    }\n\n    const {\n      loc,\n      missingPlugin\n    } = err;\n\n    if (loc) {\n      const codeFrame = (0, _codeFrame().codeFrameColumns)(code, {\n        start: {\n          line: loc.line,\n          column: loc.column + 1\n        }\n      }, {\n        highlightCode\n      });\n\n      if (missingPlugin) {\n        err.message = `${filename}: ` + (0, _missingPluginHelper.default)(missingPlugin[0], loc, codeFrame);\n      } else {\n        err.message = `${filename}: ${err.message}\\n\\n` + codeFrame;\n      }\n\n      err.code = \"BABEL_PARSE_ERROR\";\n    }\n\n    throw err;\n  }\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}