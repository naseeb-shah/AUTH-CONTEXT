{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _path = require(\"./path\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  VISITOR_KEYS\n} = _t;\n\nclass TraversalContext {\n  constructor(scope, opts, state, parentPath) {\n    this.queue = null;\n    this.priorityQueue = null;\n    this.parentPath = parentPath;\n    this.scope = scope;\n    this.state = state;\n    this.opts = opts;\n  }\n\n  shouldVisit(node) {\n    const opts = this.opts;\n    if (opts.enter || opts.exit) return true;\n    if (opts[node.type]) return true;\n    const keys = VISITOR_KEYS[node.type];\n    if (!(keys != null && keys.length)) return false;\n\n    for (const key of keys) {\n      if (node[key]) return true;\n    }\n\n    return false;\n  }\n\n  create(node, obj, key, listKey) {\n    return _path.default.get({\n      parentPath: this.parentPath,\n      parent: node,\n      container: obj,\n      key: key,\n      listKey\n    });\n  }\n\n  maybeQueue(path, notPriority) {\n    if (this.queue) {\n      if (notPriority) {\n        this.queue.push(path);\n      } else {\n        this.priorityQueue.push(path);\n      }\n    }\n  }\n\n  visitMultiple(container, parent, listKey) {\n    if (container.length === 0) return false;\n    const queue = [];\n\n    for (let key = 0; key < container.length; key++) {\n      const node = container[key];\n\n      if (node && this.shouldVisit(node)) {\n        queue.push(this.create(parent, container, key, listKey));\n      }\n    }\n\n    return this.visitQueue(queue);\n  }\n\n  visitSingle(node, key) {\n    if (this.shouldVisit(node[key])) {\n      return this.visitQueue([this.create(node, node, key)]);\n    } else {\n      return false;\n    }\n  }\n\n  visitQueue(queue) {\n    this.queue = queue;\n    this.priorityQueue = [];\n    const visited = new WeakSet();\n    let stop = false;\n\n    for (const path of queue) {\n      path.resync();\n\n      if (path.contexts.length === 0 || path.contexts[path.contexts.length - 1] !== this) {\n        path.pushContext(this);\n      }\n\n      if (path.key === null) continue;\n      const {\n        node\n      } = path;\n      if (visited.has(node)) continue;\n      if (node) visited.add(node);\n\n      if (path.visit()) {\n        stop = true;\n        break;\n      }\n\n      if (this.priorityQueue.length) {\n        stop = this.visitQueue(this.priorityQueue);\n        this.priorityQueue = [];\n        this.queue = queue;\n        if (stop) break;\n      }\n    }\n\n    for (const path of queue) {\n      path.popContext();\n    }\n\n    this.queue = null;\n    return stop;\n  }\n\n  visit(node, key) {\n    const nodes = node[key];\n    if (!nodes) return false;\n\n    if (Array.isArray(nodes)) {\n      return this.visitMultiple(nodes, node, key);\n    } else {\n      return this.visitSingle(node, key);\n    }\n  }\n\n}\n\nexports.default = TraversalContext;","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_path","require","_t","VISITOR_KEYS","TraversalContext","constructor","scope","opts","state","parentPath","queue","priorityQueue","shouldVisit","node","enter","exit","type","keys","length","key","create","obj","listKey","get","parent","container","maybeQueue","path","notPriority","push","visitMultiple","visitQueue","visitSingle","visited","WeakSet","stop","resync","contexts","pushContext","has","add","visit","popContext","nodes","Array","isArray"],"sources":["C:/Users/arrow/Desktop/Software Topics/React.js/ui/node_modules/@babel/traverse/lib/context.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _path = require(\"./path\");\n\nvar _t = require(\"@babel/types\");\n\nconst {\n  VISITOR_KEYS\n} = _t;\n\nclass TraversalContext {\n  constructor(scope, opts, state, parentPath) {\n    this.queue = null;\n    this.priorityQueue = null;\n    this.parentPath = parentPath;\n    this.scope = scope;\n    this.state = state;\n    this.opts = opts;\n  }\n\n  shouldVisit(node) {\n    const opts = this.opts;\n    if (opts.enter || opts.exit) return true;\n    if (opts[node.type]) return true;\n    const keys = VISITOR_KEYS[node.type];\n    if (!(keys != null && keys.length)) return false;\n\n    for (const key of keys) {\n      if (node[key]) return true;\n    }\n\n    return false;\n  }\n\n  create(node, obj, key, listKey) {\n    return _path.default.get({\n      parentPath: this.parentPath,\n      parent: node,\n      container: obj,\n      key: key,\n      listKey\n    });\n  }\n\n  maybeQueue(path, notPriority) {\n    if (this.queue) {\n      if (notPriority) {\n        this.queue.push(path);\n      } else {\n        this.priorityQueue.push(path);\n      }\n    }\n  }\n\n  visitMultiple(container, parent, listKey) {\n    if (container.length === 0) return false;\n    const queue = [];\n\n    for (let key = 0; key < container.length; key++) {\n      const node = container[key];\n\n      if (node && this.shouldVisit(node)) {\n        queue.push(this.create(parent, container, key, listKey));\n      }\n    }\n\n    return this.visitQueue(queue);\n  }\n\n  visitSingle(node, key) {\n    if (this.shouldVisit(node[key])) {\n      return this.visitQueue([this.create(node, node, key)]);\n    } else {\n      return false;\n    }\n  }\n\n  visitQueue(queue) {\n    this.queue = queue;\n    this.priorityQueue = [];\n    const visited = new WeakSet();\n    let stop = false;\n\n    for (const path of queue) {\n      path.resync();\n\n      if (path.contexts.length === 0 || path.contexts[path.contexts.length - 1] !== this) {\n        path.pushContext(this);\n      }\n\n      if (path.key === null) continue;\n      const {\n        node\n      } = path;\n      if (visited.has(node)) continue;\n      if (node) visited.add(node);\n\n      if (path.visit()) {\n        stop = true;\n        break;\n      }\n\n      if (this.priorityQueue.length) {\n        stop = this.visitQueue(this.priorityQueue);\n        this.priorityQueue = [];\n        this.queue = queue;\n        if (stop) break;\n      }\n    }\n\n    for (const path of queue) {\n      path.popContext();\n    }\n\n    this.queue = null;\n    return stop;\n  }\n\n  visit(node, key) {\n    const nodes = node[key];\n    if (!nodes) return false;\n\n    if (Array.isArray(nodes)) {\n      return this.visitMultiple(nodes, node, key);\n    } else {\n      return this.visitSingle(node, key);\n    }\n  }\n\n}\n\nexports.default = TraversalContext;"],"mappings":"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"},"metadata":{},"sourceType":"script"}