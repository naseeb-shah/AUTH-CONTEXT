{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nfunction helpers() {\n  const data = require(\"@babel/helpers\");\n\n  helpers = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _generator() {\n  const data = require(\"@babel/generator\");\n\n  _generator = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _template() {\n  const data = require(\"@babel/template\");\n\n  _template = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _t() {\n  const data = require(\"@babel/types\");\n\n  _t = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _file = require(\"../transformation/file/file\");\n\nconst {\n  arrayExpression,\n  assignmentExpression,\n  binaryExpression,\n  blockStatement,\n  callExpression,\n  cloneNode,\n  conditionalExpression,\n  exportNamedDeclaration,\n  exportSpecifier,\n  expressionStatement,\n  functionExpression,\n  identifier,\n  memberExpression,\n  objectExpression,\n  program,\n  stringLiteral,\n  unaryExpression,\n  variableDeclaration,\n  variableDeclarator\n} = _t();\n\nconst buildUmdWrapper = replacements => _template().default.statement`\n    (function (root, factory) {\n      if (typeof define === \"function\" && define.amd) {\n        define(AMD_ARGUMENTS, factory);\n      } else if (typeof exports === \"object\") {\n        factory(COMMON_ARGUMENTS);\n      } else {\n        factory(BROWSER_ARGUMENTS);\n      }\n    })(UMD_ROOT, function (FACTORY_PARAMETERS) {\n      FACTORY_BODY\n    });\n  `(replacements);\n\nfunction buildGlobal(allowlist) {\n  const namespace = identifier(\"babelHelpers\");\n  const body = [];\n  const container = functionExpression(null, [identifier(\"global\")], blockStatement(body));\n  const tree = program([expressionStatement(callExpression(container, [conditionalExpression(binaryExpression(\"===\", unaryExpression(\"typeof\", identifier(\"global\")), stringLiteral(\"undefined\")), identifier(\"self\"), identifier(\"global\"))]))]);\n  body.push(variableDeclaration(\"var\", [variableDeclarator(namespace, assignmentExpression(\"=\", memberExpression(identifier(\"global\"), namespace), objectExpression([])))]));\n  buildHelpers(body, namespace, allowlist);\n  return tree;\n}\n\nfunction buildModule(allowlist) {\n  const body = [];\n  const refs = buildHelpers(body, null, allowlist);\n  body.unshift(exportNamedDeclaration(null, Object.keys(refs).map(name => {\n    return exportSpecifier(cloneNode(refs[name]), identifier(name));\n  })));\n  return program(body, [], \"module\");\n}\n\nfunction buildUmd(allowlist) {\n  const namespace = identifier(\"babelHelpers\");\n  const body = [];\n  body.push(variableDeclaration(\"var\", [variableDeclarator(namespace, identifier(\"global\"))]));\n  buildHelpers(body, namespace, allowlist);\n  return program([buildUmdWrapper({\n    FACTORY_PARAMETERS: identifier(\"global\"),\n    BROWSER_ARGUMENTS: assignmentExpression(\"=\", memberExpression(identifier(\"root\"), namespace), objectExpression([])),\n    COMMON_ARGUMENTS: identifier(\"exports\"),\n    AMD_ARGUMENTS: arrayExpression([stringLiteral(\"exports\")]),\n    FACTORY_BODY: body,\n    UMD_ROOT: identifier(\"this\")\n  })]);\n}\n\nfunction buildVar(allowlist) {\n  const namespace = identifier(\"babelHelpers\");\n  const body = [];\n  body.push(variableDeclaration(\"var\", [variableDeclarator(namespace, objectExpression([]))]));\n  const tree = program(body);\n  buildHelpers(body, namespace, allowlist);\n  body.push(expressionStatement(namespace));\n  return tree;\n}\n\nfunction buildHelpers(body, namespace, allowlist) {\n  const getHelperReference = name => {\n    return namespace ? memberExpression(namespace, identifier(name)) : identifier(`_${name}`);\n  };\n\n  const refs = {};\n  helpers().list.forEach(function (name) {\n    if (allowlist && allowlist.indexOf(name) < 0) return;\n    const ref = refs[name] = getHelperReference(name);\n    helpers().ensure(name, _file.default);\n    const {\n      nodes\n    } = helpers().get(name, getHelperReference, ref);\n    body.push(...nodes);\n  });\n  return refs;\n}\n\nfunction _default(allowlist) {\n  let outputType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"global\";\n  let tree;\n  const build = {\n    global: buildGlobal,\n    module: buildModule,\n    umd: buildUmd,\n    var: buildVar\n  }[outputType];\n\n  if (build) {\n    tree = build(allowlist);\n  } else {\n    throw new Error(`Unsupported output type ${outputType}`);\n  }\n\n  return (0, _generator().default)(tree).code;\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","default","_default","helpers","data","require","_generator","_template","_t","_file","arrayExpression","assignmentExpression","binaryExpression","blockStatement","callExpression","cloneNode","conditionalExpression","exportNamedDeclaration","exportSpecifier","expressionStatement","functionExpression","identifier","memberExpression","objectExpression","program","stringLiteral","unaryExpression","variableDeclaration","variableDeclarator","buildUmdWrapper","replacements","statement","buildGlobal","allowlist","namespace","body","container","tree","push","buildHelpers","buildModule","refs","unshift","keys","map","name","buildUmd","FACTORY_PARAMETERS","BROWSER_ARGUMENTS","COMMON_ARGUMENTS","AMD_ARGUMENTS","FACTORY_BODY","UMD_ROOT","buildVar","getHelperReference","list","forEach","indexOf","ref","ensure","nodes","get","outputType","build","global","module","umd","var","Error","code"],"sources":["C:/Users/arrow/Desktop/Software Topics/React.js/ui/node_modules/@babel/core/lib/tools/build-external-helpers.js"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = _default;\n\nfunction helpers() {\n  const data = require(\"@babel/helpers\");\n\n  helpers = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _generator() {\n  const data = require(\"@babel/generator\");\n\n  _generator = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _template() {\n  const data = require(\"@babel/template\");\n\n  _template = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _t() {\n  const data = require(\"@babel/types\");\n\n  _t = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar _file = require(\"../transformation/file/file\");\n\nconst {\n  arrayExpression,\n  assignmentExpression,\n  binaryExpression,\n  blockStatement,\n  callExpression,\n  cloneNode,\n  conditionalExpression,\n  exportNamedDeclaration,\n  exportSpecifier,\n  expressionStatement,\n  functionExpression,\n  identifier,\n  memberExpression,\n  objectExpression,\n  program,\n  stringLiteral,\n  unaryExpression,\n  variableDeclaration,\n  variableDeclarator\n} = _t();\n\nconst buildUmdWrapper = replacements => _template().default.statement`\n    (function (root, factory) {\n      if (typeof define === \"function\" && define.amd) {\n        define(AMD_ARGUMENTS, factory);\n      } else if (typeof exports === \"object\") {\n        factory(COMMON_ARGUMENTS);\n      } else {\n        factory(BROWSER_ARGUMENTS);\n      }\n    })(UMD_ROOT, function (FACTORY_PARAMETERS) {\n      FACTORY_BODY\n    });\n  `(replacements);\n\nfunction buildGlobal(allowlist) {\n  const namespace = identifier(\"babelHelpers\");\n  const body = [];\n  const container = functionExpression(null, [identifier(\"global\")], blockStatement(body));\n  const tree = program([expressionStatement(callExpression(container, [conditionalExpression(binaryExpression(\"===\", unaryExpression(\"typeof\", identifier(\"global\")), stringLiteral(\"undefined\")), identifier(\"self\"), identifier(\"global\"))]))]);\n  body.push(variableDeclaration(\"var\", [variableDeclarator(namespace, assignmentExpression(\"=\", memberExpression(identifier(\"global\"), namespace), objectExpression([])))]));\n  buildHelpers(body, namespace, allowlist);\n  return tree;\n}\n\nfunction buildModule(allowlist) {\n  const body = [];\n  const refs = buildHelpers(body, null, allowlist);\n  body.unshift(exportNamedDeclaration(null, Object.keys(refs).map(name => {\n    return exportSpecifier(cloneNode(refs[name]), identifier(name));\n  })));\n  return program(body, [], \"module\");\n}\n\nfunction buildUmd(allowlist) {\n  const namespace = identifier(\"babelHelpers\");\n  const body = [];\n  body.push(variableDeclaration(\"var\", [variableDeclarator(namespace, identifier(\"global\"))]));\n  buildHelpers(body, namespace, allowlist);\n  return program([buildUmdWrapper({\n    FACTORY_PARAMETERS: identifier(\"global\"),\n    BROWSER_ARGUMENTS: assignmentExpression(\"=\", memberExpression(identifier(\"root\"), namespace), objectExpression([])),\n    COMMON_ARGUMENTS: identifier(\"exports\"),\n    AMD_ARGUMENTS: arrayExpression([stringLiteral(\"exports\")]),\n    FACTORY_BODY: body,\n    UMD_ROOT: identifier(\"this\")\n  })]);\n}\n\nfunction buildVar(allowlist) {\n  const namespace = identifier(\"babelHelpers\");\n  const body = [];\n  body.push(variableDeclaration(\"var\", [variableDeclarator(namespace, objectExpression([]))]));\n  const tree = program(body);\n  buildHelpers(body, namespace, allowlist);\n  body.push(expressionStatement(namespace));\n  return tree;\n}\n\nfunction buildHelpers(body, namespace, allowlist) {\n  const getHelperReference = name => {\n    return namespace ? memberExpression(namespace, identifier(name)) : identifier(`_${name}`);\n  };\n\n  const refs = {};\n  helpers().list.forEach(function (name) {\n    if (allowlist && allowlist.indexOf(name) < 0) return;\n    const ref = refs[name] = getHelperReference(name);\n    helpers().ensure(name, _file.default);\n    const {\n      nodes\n    } = helpers().get(name, getHelperReference, ref);\n    body.push(...nodes);\n  });\n  return refs;\n}\n\nfunction _default(allowlist, outputType = \"global\") {\n  let tree;\n  const build = {\n    global: buildGlobal,\n    module: buildModule,\n    umd: buildUmd,\n    var: buildVar\n  }[outputType];\n\n  if (build) {\n    tree = build(allowlist);\n  } else {\n    throw new Error(`Unsupported output type ${outputType}`);\n  }\n\n  return (0, _generator().default)(tree).code;\n}"],"mappings":"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"},"metadata":{},"sourceType":"script"}